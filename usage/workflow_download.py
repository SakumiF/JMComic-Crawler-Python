from jmcomic import *
from jmcomic.cl import JmcomicUI

# 下方填入你要下载的本子的id，一行一个，每行的首尾可以有空白字符
jm_albums = '''
542224
543569
431778
542219
503452
405745
531306
542521
536587
531769
23021
287493
336263
487060
272965
356445
402923
305402
213503
502158
535918
425048
496529
303287
397739
228869
447114
455092
462241
519927
415770
297621
483547
535277
524327
530475
517758
439136
499538
469967
16525
444557
514095
523243
8978
524610
525227
527754
335973
480118
533548
531696
527423
530989
531299
533514
528760
521862
523423
525598
527932
528229
527885
529463
528298
453603
526450
527774
187422
148857
524933
524984
525193
523690
524783
524866
520997
521813
333888
519428
505021
517155
519009
515353
427917
231100
453422
506278
494667
357978
217865
445607
398018
506253
513653
431007
431002
471673
434806
508777
336752
511356
511579
511838
512448
316023
262287
148163
466657
177697
508136
502044
501692
498426
508676
509014
30761
3079
436703
503913
379603
290789
471611
500308
432233
25894
499451
502382
498610
508564
472265
483674
498423
485733
505049
330662
478404
479782
485323
480275
508034
485290
508006
477691
497723
491203
491000
494202
199292
359856
508078
499813
19351
100822
97102
501943
181921
32868
14847
498660
138079
499797
502378
496841
495925
186257
460128
478525
447913
452839
463245
494190
491346
347793
481463
481999
483251
486287
411298
481552
454816
455443
473961
476646
477249
474770
221146
442181
459417
438294
218319
41565
240160
258092
464889
469510
443740
460132
461363
359388
444530
459402
453122
372502
368125
456943
81902
47112
407063
371628
457455
453578
453043
449395
445794
447914
446226
397731
430382
442783
408756
434573
433420
362010
431294
433073
433651
418780
404960
422832
404196
408827
429999
431206
47687
150725
419596
229730
423800
356191
381420
401467
424542
419301
419272
415827
422869
414159
418604
418770
419305
408923
415791
416888
18139
215888
192253
20105
23594
35876
144135
147348
181324
287506
287525
408072
10035
9567
230189
229556
412031
416176
415296
414190
410614
402188
403567
409849
410844
413405
406952
411229
410362
408402
39686
395782
377802
401727
389489
64460
397738
374031
394154
394966
399899
394638
381790
376634
380032
97855
84764
40051
129893
261078
139514
184989
252351
94627
279823
319471
385365
382306
382051
15928
368004
26618
247276
224064
371596
6179
101597
188172
205181
197593
273098
374061
252582
122770
83935
313482
368823
346341
353585
331733
293430
3582
188627
102373
369634
83233
301147
305629
288441
241297
181036
214481
230806
28541
211387
50528
81807
45210
15045
206361
214881
213511
316814
178004
60774
34811
51747
22060
72591
362453
216102
213072
303714
123743
201487
199501
196314
217633
209260
192994
240486
118897
121782
302247
81101
119600
27935
90370
116130
107198
116128
125601
181066
358008
36029
78926
88489
334549
29493
352727
363661
241549
54733
114799
360155
365127
342552
211472
349775
353547
348168
364316
355993
315499
199634
293292
239018
152067
302533
305424
297074
355999
322063
92352
180488
213232
349788
343158
324936
323664
325916
72601
12052
337840
271187
278543
352685
331725
252810
236959
235593
316283
113555
310181
308586
228094
340806
349464
344128
314904
337378
338825
291873
275803
330541
301391
318496
325939
229714
163693
314464
317939
319428
314003
247561
305845
146241
306354
314459
314840
293631
305637
143452
305551
41007
305262
137236
181003
242785
297462
305430
232765
85999
81924
201934
9056
40252
9388
15697
246841
256175
177271
203446
246879
101708
102649
105661
20383
222104
82884
209654
258315
304645
300272
94886
281040
148137
191493
133028
140993
145264
224626
245295
153116
40743
25640
143061
101694
138988
250040
206196
71014
74380
73279
255485
198671
51942
191128
269425
190040
70314
255467
162686
186985
210075
104669
240961
200531
218850
262989
147871
181767
105502
26988
20234
95546
177965
6890
85826
96278
246372
84139
236019
121467
238323
227203
213324
229134
234121
249248
220430
254466
196302
208655
205202
213216
213217
213218
229135
275911
275910
210076
258093
258090
214831
214829
258115
'''

# 单独下载章节
jm_photos = '''



'''


def env(name, default, trim=('[]', '""', "''")):
    import os
    value = os.getenv(name, None)
    if value is None or value == '':
        return default

    for pair in trim:
        if value.startswith(pair[0]) and value.endswith(pair[1]):
            value = value[1:-1]

    return value


def get_id_set(env_name, given):
    aid_set = set()
    for text in [
        given,
        (env(env_name, '')).replace('-', '\n'),
    ]:
        aid_set.update(str_to_set(text))

    return aid_set


def main():
    album_id_set = get_id_set('JM_ALBUM_IDS', jm_albums)
    photo_id_set = get_id_set('JM_PHOTO_IDS', jm_photos)

    helper = JmcomicUI()
    helper.album_id_list = list(album_id_set)
    helper.photo_id_list = list(photo_id_set)

    option = get_option()
    helper.run(option)
    option.call_all_plugin('after_download')


def get_option():
    # 读取 option 配置文件
    option = create_option(os.path.abspath(os.path.join(__file__, '../../assets/option/option_workflow_download.yml')))

    # 支持工作流覆盖配置文件的配置
    cover_option_config(option)

    # 把请求错误的html下载到文件，方便GitHub Actions下载查看日志
    log_before_raise()

    return option


def cover_option_config(option: JmOption):
    dir_rule = env('DIR_RULE', None)
    if dir_rule is not None:
        the_old = option.dir_rule
        the_new = DirRule(dir_rule, base_dir=the_old.base_dir)
        option.dir_rule = the_new

    impl = env('CLIENT_IMPL', None)
    if impl is not None:
        option.client.impl = impl

    suffix = env('IMAGE_SUFFIX', None)
    if suffix is not None:
        option.download.image.suffix = fix_suffix(suffix)


def log_before_raise():
    jm_download_dir = env('JM_DOWNLOAD_DIR', workspace())
    mkdir_if_not_exists(jm_download_dir)

    def decide_filepath(e):
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)

        if resp is None:
            suffix = str(time_stamp())
        else:
            suffix = resp.url

        name = '-'.join(
            fix_windir_name(it)
            for it in [
                e.description,
                current_thread().name,
                suffix
            ]
        )

        path = f'{jm_download_dir}/【出错了】{name}.log'
        return path

    def exception_listener(e: JmcomicException):
        """
        异常监听器，实现了在 GitHub Actions 下，把请求错误的信息下载到文件，方便调试和通知使用者
        """
        # 决定要写入的文件路径
        path = decide_filepath(e)

        # 准备内容
        content = [
            str(type(e)),
            e.msg,
        ]
        for k, v in e.context.items():
            content.append(f'{k}: {v}')

        # resp.text
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)
        if resp:
            content.append(f'响应文本: {resp.text}')

        # 写文件
        write_text(path, '\n'.join(content))

    JmModuleConfig.register_exception_listener(JmcomicException, exception_listener)


if __name__ == '__main__':
    main()
